void drawEvt()
{
  const int nChannels = 256;

  int goodCh[] = {31, 32, 33, 34, 35, 36, 37, 38,
		  44, 45, 46,
		  50, 51, 52, 53, 54,
		  59, 60, 61, 62,
		  65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
		  80, 81, 82, 83, 84, 85, 86,
		  90, 91, 92};

  // int raw[nChannels] = {501, 499, 501, 493, 500, 495, 495, 493, 490, 492, 503, 504, 502, 500, 495, 503, 500, 493, 493, 498, 495, 491, 493, 500, 485, 493, 489, 494, 481, 494, 515, 512, 511, 514, 502, 508, 515, 507, 513, 505, 496, 513, 511, 506, 502, 511, 501, 515, 491, 512, 506, 504, 508, 507, 503, 509, 489, 519, 500, 498, 501, 496, 509, 500, 510, 512, 509, 498, 508, 497, 509, 501, 506, 507, 509, 512, 503, 503, 481, 516, 509, 508, 504, 502, 512, 510, 505, 506, 487, 506, 507, 506, 505, 505, 489, 482, 481, 483, 479, 486, 487, 479, 484, 492, 481, 482, 483, 483, 473, 489, 483, 482, 479, 482, 485, 483, 478, 485, 483, 486, 480, 478, 486, 481, 488, 484, 478, 486, 465, 463, 463, 466, 462, 466, 460, 463, 457, 462, 462, 453, 460, 458, 457, 457, 458, 455, 458, 457, 451, 455, 462, 463, 456, 463, 461, 446, 467, 453, 459, 455, 447, 452, 448, 460, 450, 453, 448, 449, 449, 453, 446, 445, 460, 437, 443, 458, 452, 444, 452, 462, 450, 448, 450, 446, 453, 450, 454, 448, 458, 454, 449, 450, 449, 447, 454, 448, 455, 453, 444, 453, 446, 449, 449, 441, 463, 445, 450, 450, 455, 456, 468, 449, 456, 451, 455, 457, 450, 454, 446, 459, 454, 455, 447, 459, 448, 463, 457, 457, 459, 463, 461, 471, 454, 465, 468, 458, 463, 471, 468, 464, 466, 475, 467, 469, 472, 467, 469, 470, 468, 476, 467, 465, 464, 472, 465, 474};

  // double pedSub[nChannels] = {-8.24361, -6.86775, -10.8657, -11.1291, -4.86822, -13.3587, -8.41346, -8.73971, -13.4866, -14.6793, -4.9398, -6.45472, -9.28181, -8.07205, -7.52901, -5.62513, -2.67658, -8.53791, -8.85143, -2.73096, -5.86955, -8.64426, -8.21712, 0.0752853, -10.7628, -1.53068, -9.54307, -4.92447, -17.5714, -3.00632, 20.6752, 15.3145, 11.8803, 17.8173, 8.17427, 10.8393, 19.3297, 10.2338, 17.6604, 13.4391, -2.57832, 19.7139, 17.6765, 8.15735, 6.93738, 16.9892, 13.7158, 21.7406, -6.4319, 16.3856, 14.1338, 12.563, 17.379, 15.2496, 9.15748, 17.564, -3.96657, 29.1693, 4.27407, 8.65554, 9.13867, 8.48824, 17.4191, 1.18049, 23.9128, 19.151, 14.9517, 12.3364, 14.7134, 6.81575, 21.0286, 9.23889, 14.6046, 17.2991, 17.9245, 16.3392, 12.9264, 13.4325, -10.2202, 20.2517, 12.9015, 16.9534, 13.3165, 13.8693, 18.9741, 17.7463, 12.3317, 14.9119, -5.7523, 18.9045, 12.8817, 18.3197, 13.7677, 18.782, -6.80869, -5.53754, -5.43577, -4.71234, -7.54578, -8.66213, -4.00678, -7.26074, -6.25071, -4.41941, -6.42665, -8.23412, -8.60687, -11.3492, -16.7314, -3.5367, -7.71969, -13.2766, -13.1876, -12.03, -10.4416, -7.45448, -11.5561, -5.11086, -6.70579, -6.90478, -10.9408, -10.9678, -7.0277, -5.40551, -7.26902, -7.57274, -11.6066, -8.7078, -5.78628, -5.08734, -9.36784, -8.63513, -9.69903, -4.03316, -9.35551, -4.14255, -9.13292, -11.8617, -6.26089, -12.6633, -7.71744, -10.8589, -9.40439, -12.8177, -5.18784, -10.57, -8.85654, -7.50136, -13.8582, -13.5477, -5.90326, -7.4109, -11.5555, -2.65561, -4.76104, -13.5588, -0.612397, -9.14452, -8.27138, -7.35322, -8.93074, -6.4284, -11.1063, -5.55427, -9.6549, -5.78172, -8.50826, -6.76356, -9.98717, -3.86825, -9.30698, -14.3254, -1.63166, -20.1973, -9.62446, -1.79761, -10.0693, -13.6415, -8.53877, -3.65851, -10.6854, -5.83069, -7.22278, -8.12387, -3.47541, -11.6291, -4.4178, -10.2913, -3.84481, -6.72616, -4.79063, -9.15186, -7.4089, -13.9058, -7.27814, -10.7017, -4.24087, -9.81725, -11.1967, -6.25189, -13.1424, -14.7247, -9.72252, -22.4761, 2.82483, -11.1378, -11.5988, -10.8235, -9.73485, -6.82095, -3.41136, -11.9653, -4.8634, -9.65337, -8.72555, -9.32524, -9.49582, -4.04623, -13.3957, -8.10094, -13.4962, -6.2152, -13.5073, -4.50669, -14.2073, -6.81865, -6.04052, -9.67827, -11.4623, -9.3363, -11.1297, -6.4047, -14.1397, -11.3096, -5.47583, -14.4329, -10.2525, -6.60157, -6.88431, -13.2344, -13.1064, -9.25957, -9.45198, -9.69464, -9.93322, -7.18915, -8.88524, -13.4363, -13.6413, -11.3842, -10.0896, -12.0924, -16.6476, -11.2889, -10.8817, -9.01484};

  // double commMode = 14.0349;
  int raw[nChannels] = {485, 477, 489, 479, 480, 488, 486, 470, 482, 482, 487, 487, 489, 484, 483, 483, 476, 481, 477, 478, 474, 472, 475, 479, 466, 468, 480, 471, 493, 462, 828, 721, 699, 694, 697, 692, 690, 695, 685, 726, 493, 712, 687, 690, 681, 686, 687, 723, 497, 713, 684, 682, 680, 683, 694, 724, 487, 712, 631, 682, 675, 676, 680, 606, 686, 687, 684, 669, 684, 679, 672, 674, 682, 676, 675, 681, 678, 712, 484, 702, 690, 675, 675, 685, 683, 675, 673, 715, 488, 703, 689, 675, 701, 819, 488, 470, 467, 462, 462, 467, 464, 459, 466, 472, 461, 459, 469, 471, 469, 464, 459, 471, 471, 472, 465, 463, 458, 464, 460, 461, 465, 461, 463, 465, 468, 466, 466, 469, 469, 473, 470, 474, 465, 468, 473, 468, 461, 470, 462, 462, 462, 465, 468, 465, 464, 461, 463, 463, 457, 464, 464, 466, 466, 460, 466, 441, 471, 456, 468, 461, 453, 453, 455, 459, 462, 455, 450, 455, 449, 458, 451, 455, 463, 449, 451, 459, 457, 453, 460, 463, 459, 447, 457, 450, 451, 459, 459, 454, 461, 461, 449, 457, 460, 457, 466, 450, 453, 464, 460, 453, 457, 463, 456, 470, 452, 457, 455, 457, 459, 466, 470, 459, 464, 457, 457, 468, 452, 459, 455, 459, 462, 456, 448, 460, 461, 468, 459, 457, 471, 464, 464, 475, 473, 474, 461, 471, 471, 471, 472, 476, 473, 484, 477, 479, 481, 471, 487, 489, 480, 492, 478, 476, 481, 488, 474, 494};


  double pedSub[nChannels] = {-24.2436, -28.8678, -22.8657, -25.1291, -24.8682, -20.3587, -17.4135, -31.7397, -21.4866, -24.6793, -20.9398, -23.4547, -22.2818, -24.072, -19.529, -25.6251, -26.6766, -20.5379, -24.8514, -22.731, -26.8696, -27.6443, -26.2171, -20.9247, -29.7628, -26.5307, -18.5431, -27.9245, -5.57145, -35.0063, 333.675, 224.315, 199.88, 197.817, 203.174, 194.839, 194.33, 198.234, 189.66, 234.439, -5.57832, 218.714, 193.676, 192.157, 185.937, 191.989, 199.716, 229.741, -0.431901, 217.386, 192.134, 190.563, 189.379, 191.25, 200.157, 232.564, -5.96657, 222.169, 135.274, 192.656, 183.139, 188.488, 188.419, 107.18, 199.913, 194.151, 189.952, 183.336, 190.713, 188.816, 184.029, 182.239, 190.605, 186.299, 183.924, 185.339, 187.926, 222.433, -7.22018, 206.252, 193.901, 183.953, 184.316, 196.869, 189.974, 182.746, 180.332, 223.912, -4.7523, 215.904, 194.882, 187.32, 209.768, 332.782, -7.80869, -17.5375, -19.4358, -25.7123, -24.5458, -27.6621, -27.0068, -27.2607, -24.2507, -24.4194, -26.4266, -31.2341, -22.6069, -23.3492, -20.7314, -28.5367, -31.7197, -24.2766, -21.1876, -22.03, -30.4416, -27.4545, -31.5561, -26.1109, -29.7058, -31.9048, -25.9408, -27.9678, -30.0277, -21.4055, -27.269, -25.5727, -23.6066, -25.7078, -1.78628, 4.91266, -2.36784, -0.635131, -6.69903, -2.03316, 3.64449, 0.857449, -5.13292, -3.86173, -6.26089, -3.66325, -5.71744, -3.85892, 1.59561, -4.81765, 0.812161, -4.57001, -3.85654, -1.50136, -7.85819, -4.54772, -3.90326, -4.4109, -1.55554, -5.65561, 0.238962, -18.5588, 3.3876, -6.14452, 0.728624, -1.35322, -2.93074, -5.4284, -4.10631, -6.55427, 2.3451, -3.78172, -6.50826, -0.763558, -9.98717, 1.13175, -4.30698, -4.3254, 1.36834, -8.19732, -1.62446, -0.797608, -5.0693, -4.64149, -0.538774, -2.65851, -1.68542, -6.83069, -0.222779, -4.12387, -5.47541, -2.62912, 0.582199, -4.29126, -0.844809, 0.273839, -4.79063, -2.15186, 3.5911, -3.90576, 4.72186, -8.70173, -6.24087, 1.18275, 4.80326, -6.25189, -2.14242, -0.72468, -2.72252, 6.52386, -8.17517, 0.862178, -6.59877, -3.82355, -5.73485, 3.17905, -1.41136, -1.96529, 3.1366, -3.65337, -6.72555, 1.67476, -7.49582, 0.953773, -4.39569, -8.10094, -5.4962, -5.2152, -12.5073, -3.50669, -1.20728, -1.81865, -4.04052, -9.67827, 0.537677, -8.3363, -8.12969, -2.4047, 4.86028, -2.30956, -12.4758, -1.43293, -2.25251, -6.60157, -2.88431, -1.23442, -6.10635, -0.259566, 0.548024, 0.305359, -0.933224, -3.18915, 9.11476, 5.56369, -1.64129, 4.61576, 0.910357, -1.09238, 0.352433, 4.71109, -1.88175, 10.9852};

  double commMode = 191.606;

  TH1I* rawEvt = new TH1I("rawEvt", "Raw event;Channel;Pulse height [ADC]", 256, -0.5, 255.5);
  TH1D* pedSubEvt = new TH1D("pedSubEvt", "Pedestal subtracted event;Channel;Pulse height [ADC]", 256, -0.5, 255.5);
  TH1D* pedSubGoodChEvt = new TH1D("pedSubGoodChEvt", "Pedestal subtracted event in the good channels;Channel;Pulse height [ADC]", 256, -0.5, 255.5);
  TH1D* commSubGoodChEvt = new TH1D("commSubGoodChEvt", "Common mode subtracted event in the good channels;Channel;Pulse height [ADC]", 256, -0.5, 255.5);

  TF1* cm = new TF1("cm", "[0]", -0.5, 255.5);
  cm->SetParameters(&commMode);
  cm->SetLineColor(kRed);

  unsigned int i;

  for(i = 0; i < nChannels; ++i)
    {
      rawEvt->SetBinContent(i + 1, raw[i]);
      pedSubEvt->SetBinContent(i + 1, pedSub[i]);
    }

  for(i = 0; i < sizeof(goodCh) / sizeof(int); ++i)
    {
      pedSubGoodChEvt->SetBinContent(goodCh[i] + 1, pedSub[goodCh[i]]);
      commSubGoodChEvt->SetBinContent(goodCh[i] + 1, pedSub[goodCh[i]] - commMode);
    }

  TCanvas* c1 = new TCanvas();
  rawEvt->SetLineColor(kBlue);
  rawEvt->Draw();

  TCanvas* c2 = new TCanvas();
  pedSubEvt->SetLineColor(kBlue);
  pedSubEvt->Draw();

  TCanvas* c3 = new TCanvas();
  pedSubGoodChEvt->SetLineColor(kBlue);
  pedSubGoodChEvt->Draw();
  cm->Draw("SAME");

  TCanvas* c4 = new TCanvas();
  commSubGoodChEvt->SetLineColor(kBlue);
  commSubGoodChEvt->Draw();

  return;
}
